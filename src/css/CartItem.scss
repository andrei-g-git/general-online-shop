@import 'Variables.scss';
@import 'Mixins.scss';

.cart-item{
    @include commonGridTemplateWithoutArea();
    grid-template-areas: 
        "title title title title title"
        " pic pic pic pic pic "
        "quant . . . price";

    background-color: $primary-color-faded;
    margin: 2rem $app-horizontal-margin; //override

    &> h1{
        text-align: center;
        grid-area: title;
    }

    &> img{ //these kind of repeat
        width: 80%;
        grid-area: pic;
        justify-self: center;
        padding: 5% 0;
    }

    .quantity-modifier{
        display: flex;
        justify-content: space-between;
        align-items: center;

        &>.change-quantity{
            height: 2rem;
        }

        &>.quantity-output{
            width: 2rem;
            height: 2rem;
            background-color: white;
            border: solid 1px lightgray;
            border-radius: 0.3rem;
            //display: flex;
            text-align: center;
            font-size: larger;
            //justify-content: center;
        }
    }

    .subtotal-group{
        grid-area: price;

        &> * {
            padding: 0;
            margin: 0;        
        }

        display: grid;
        grid-template-columns: auto auto;
        grid-template-rows: auto auto auto;

        &label:nth-child(1), label:nth-child(2), label:nth-child(3), label:nth-child(4){
            grid-column: 1 / span 1;
        }

        &label:nth-child(1){
            grid-row: 1 / span 1;
        }
        &label:nth-child(2){
            grid-row: 2 / span 1;
        }
        &label:nth-child(3){
            grid-row: 3 / span 1;
        }
        &label:nth-child(4){
            grid-row: 4 / span 1;
        }        

        &p:nth-child(1), p:nth-child(2), p:nth-child(3), p:nth-child(4){
            grid-column: 2 / span 1;
        }

        &p:nth-child(1){
            grid-row: 1 / span 1;
        }
        &p:nth-child(2){
            grid-row: 2 / span 1;
        }
        &p:nth-child(3){
            grid-row: 3 / span 1;
        }
        &p:nth-child(4){
            grid-row: 4 / span 1;
        }        
    }
}